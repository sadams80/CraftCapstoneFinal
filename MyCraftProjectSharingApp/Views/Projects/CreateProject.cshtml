@model MyCraftProjectSharingApp.Models.ViewModel
@using MyCraftProjectSharingApp.Models
@{
    ViewBag.Title = "CreateProject";
}

<h2>CreateProject</h2>
<br />
<br />
@using (Html.BeginForm("CreateProject", "Projects", FormMethod.Post))
{
    if (Session["UserId"] != null && Session["RoleId"] != null)
    {
        @Html.HiddenFor(m => m.SingleProject.User_ID)
        <div>
            <div>
                @Html.ValidationMessageFor(m => m.SingleProject.ProjectName)
            </div>
            <div>
                @Html.LabelFor(m => m.SingleProject.ProjectName, new { @class = "LabelFormat" })
                @Html.TextBoxFor(m => m.SingleProject.ProjectName, new { @class = "form-control TextboxFormat" })
            </div>
            <div>
                @Html.ValidationMessageFor(m => m.SingleProject.Craft_ID)
            </div>
            <div>
                @Html.LabelFor(m => m.SingleProject.Craft_ID, new { @class = "LabelFormat" })
                @{
                    List<SelectListItem> craftItems = new List<SelectListItem>();
                    craftItems.Add(new SelectListItem
                    {
                        Text = ""
                    });
                    foreach (Crafts craft in Model.Crafts)
                    {
                        craftItems.Add(new SelectListItem
                        {
                            Text = craft.CraftName,
                            Value = craft.Craft_ID.ToString()
                        });
                    }
                    @Html.DropDownListFor(m => m.SingleProject.Craft_ID, craftItems, new { @class = "form-control TextboxFormat" })
                }
            </div>
            <div>
                @Html.ValidationMessageFor(m => m.SingleProject.Difficulty_ID)
            </div>
            <div>
                @Html.LabelFor(m => m.SingleProject.Difficulty_ID, new { @class = "LabelFormat" })
                @{
                    List<SelectListItem> projectItems = new List<SelectListItem>();
                    projectItems.Add(new SelectListItem
                    {
                        Text = ""
                    });
                    foreach (Difficulty difficulty in Model.Difficulties)
                    {
                        projectItems.Add(new SelectListItem
                        {
                            Text = difficulty.DifficultyLevel,
                            Value = difficulty.Difficulty_ID.ToString()
                        });
                    }
                }
                @Html.DropDownListFor(m => m.SingleProject.Difficulty_ID, projectItems, new { @class = "form-control TextboxFormat" })
            </div>
            <div>
                @Html.ValidationMessageFor(m => m.SingleProject.ProjectBody)
            </div>
            <div>
                @Html.LabelFor(m => m.SingleProject.ProjectBody, new { @class = "LabelFormat" })
                @Html.TextAreaFor(m => m.SingleProject.ProjectBody, new { @class = "form-control TextboxFormat" })
            </div>
            <br />
            <input type="submit" value="Add" />
        </div>
    }
}